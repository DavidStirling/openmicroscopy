name: "Source Build"
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    strategy:
      matrix:
        build_bf: [false, true]
        build_zarr: [false, true]
    name: Build OMERO from source
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install and run flake8
        run: |
          pip install flake8
          flake8 .
      - name: install dependencies
        run: |
          sudo apt-get install -y git
      - name: Build Bio-Formats
        id: bf
        if: matrix.build_bf
        run: |
          git clone -b components_update https://github.com/sbesson/bioformats /tmp/bioformats --depth 1
          cd /tmp/bioformats
          mvn install -DskipTests -q
          echo "::set-output name=bf_version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
          echo "::set-output name=ome_common_version::$(mvn help:evaluate -Dexpression=ome-common.version -q -DforceStdout)"
      - name: Build ZarrReader
        id: zarr_reader
        if: matrix.build_zarr
        run: |
          git clone -b dependency-updates https://github.com/dgault/ZarrReader /tmp/ZarrReader
          cd /tmp/ZarrReader
          mvn install -DskipTests -q
          echo "::set-output name=zarr_reader_version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - name: Set ZarrReader version
        if: matrix.build_zarr
        run: |
          sed -i 's/versions.OMEZarrReader=.*/versions.OMEZarrReader=${{ steps.zarr_reader.outputs.zarr_reader_version }}/' etc/omero.properties
      - name: Set Bio-Formats version
        if: matrix.build_bf
        run: |
          sed -i 's/versions.bioformats=.*/versions.bioformats=${{ steps.bf.outputs.bf_version }}/' etc/omero.properties
          sed -i 's/versions.ome-common=.*/versions.ome-common=${{ steps.bf.outputs.ome_common_version }}/' etc/omero.properties
      - name: Build
        run: ./build.py
      - name: Rebuild
        run: ./build.py clean && ./build.py
